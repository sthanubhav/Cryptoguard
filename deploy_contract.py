from web3 import Web3, HTTPProvider

def deploy_contract(contract_interface, private_key, node_url, sender_address):
    web3 = Web3(HTTPProvider(node_url))

    # Convert the private key to bytes
    private_key_bytes = bytes.fromhex(private_key)

    # Load contract ABI and bytecode
    abi = contract_interface['abi']
    bytecode = contract_interface['bin']

    # Create contract instance
    contract = web3.eth.contract(abi=abi, bytecode=bytecode)

    # Get the nonce for the sender address
    nonce = web3.eth.get_transaction_count(sender_address)

    # Build transaction dictionary
    tx_dict = {
        'chainId': 1,
        'gas': 2000000,
        'gasPrice': web3.to_wei('50', 'gwei'),
        'nonce': nonce,
        'from': sender_address
    }

    # Sign transaction
    signed_tx = web3.eth.account.sign_transaction(tx_dict, private_key_bytes)

    # Send raw transaction
    tx_receipt = web3.eth.send_raw_transaction(signed_tx.rawTransaction)
    tx_receipt = web3.eth.wait_for_transaction_receipt(tx_receipt)

    return tx_receipt.contractAddress


# Example usage
if __name__ == "__main__":
    # Example deployment parameters
    contract_interface = {'abi': [{'anonymous': False, 'inputs': [{'indexed': False, 'internalType': 'string', 'name': 'hash', 'type': 'string'}, {'indexed': False, 'internalType': 'string', 'name': 'url', 'type': 'string'}, {'indexed': False, 'internalType': 'uint256', 'name': 'timestamp', 'type': 'uint256'}], 'name': 'FileUploaded', 'type': 'event'}, {'inputs': [{'internalType': 'string', 'name': 'hash', 'type': 'string'}], 'name': 'getFile', 'outputs': [{'internalType': 'string', 'name': '', 'type': 'string'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [{'internalType': 'string', 'name': 'hash', 'type': 'string'}, {'internalType': 'string', 'name': 'url', 'type': 'string'}], 'name': 'uploadFile', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}], 'bin': '608060405234801561001057600080fd5b50610683806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063996d50bf1461003b578063e0876aa814610050575b600080fd5b61004e6100493660046103e7565b610079565b005b61006361005e3660046103ac565b6101a1565b6040516100709190610490565b60405180910390f35b60008251116100a35760405162461bcd60e51b815260040161009a90610556565b60405180910390fd5b60008151116100c45760405162461bcd60e51b815260040161009a906104e0565b6000826040516100d49190610474565b9081526020016040518091039020600101546000146101055760405162461bcd60e51b815260040161009a90610586565b60405180604001604052808281526020014281525060008360405161012a9190610474565b90815260200160405180910390206000820151816000019080519060200190610154929190610292565b50602082015181600101559050507f8664043a02bf2a214736065b34f8eca29023c11eb42d5a850103fbebe928e204828242604051610195939291906104aa565b60405180910390a15050565b6060600080836040516101b49190610474565b908152602001604051809103902060010154116101e35760405162461bcd60e51b815260040161009a9061050f565b6000826040516101f39190610474565b908152604051908190036020019020805461020d906105fc565b80601f0160208091040260200160405190810160405280929190818152602001828054610239906105fc565b80156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b50505050509050919050565b82805461029e906105fc565b90600052602060002090601f0160209004810192826102c05760008555610306565b82601f106102d957805160ff1916838001178555610306565b82800160010185558215610306579182015b828111156103065782518255916020019190600101906102eb565b50610312929150610316565b5090565b5b808211156103125760008155600101610317565b600082601f83011261033b578081fd5b813567ffffffffffffffff8082111561035657610356610637565b604051601f8301601f19168101602001828111828210171561037a5761037a610637565b604052828152848301602001861015610391578384fd5b82602086016020830137918201602001929092529392505050565b6000602082840312156103bd578081fd5b813567ffffffffffffffff8111156103d3578182fd5b6103df8482850161032b565b949350505050565b600080604083850312156103f9578081fd5b823567ffffffffffffffff80821115610410578283fd5b61041c8683870161032b565b93506020850135915080821115610431578283fd5b5061043e8582860161032b565b9150509250929050565b600081518084526104608160208601602086016105cc565b601f01601f19169290920160200192915050565b600082516104868184602087016105cc565b9190910192915050565b6000602082526104a36020830184610448565b9392505050565b6000606082526104bd6060830186610448565b82810360208401526104cf8186610448565b915050826040830152949350505050565b60208082526015908201527455524c206d757374206e6f7420626520656d70747960581b604082015260600190565b60208082526027908201527f46696c6520776974682074686520676976656e206861736820646f6573206e6f6040820152661d08195e1a5cdd60ca1b606082015260800190565b60208082526016908201527548617368206d757374206e6f7420626520656d70747960501b604082015260600190565b60208082526026908201527f46696c652077697468207468652073616d65206861736820616c72656164792060408201526565786973747360d01b606082015260800190565b60005b838110156105e75781810151838201526020016105cf565b838111156105f6576000848401525b50505050565b60028104600182168061061057607f821691505b6020821081141561063157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212208dad6ee08cf4e94cb5091dcbd0c41606138d12a5b99bcc7516bb999ce746da0964736f6c63430008000033'}
    private_key = '4cfdd494d262b8e3348a30fdded2b87adb3f81b67b0357dfb44db75fc1c3a2cd'
    node_url = 'http://127.0.0.1:7545'

    sender_address = '0x31A5826B4cF87fB437CFBa47504959F49F91A051'

    contract_address = deploy_contract(contract_interface, private_key, node_url, sender_address)
    print("Contract deployed at address:", contract_address)
